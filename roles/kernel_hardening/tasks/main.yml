---
# Kernel hardening tasks

- name: Backup sysctl.conf
  copy:
    src: /etc/sysctl.conf
    dest: /root/security-backup/sysctl.conf.backup
    remote_src: true
    owner: root
    group: root
    mode: '0600'
  when: not ansible_check_mode

# Ensure the sysctl file exists before trying to modify it
- name: Ensure sysctl.d directory exists
  file:
    path: /etc/sysctl.d
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Create initial sysctl configuration file
  file:
    path: /etc/sysctl.d/99-kubernetes-security.conf
    state: touch
    owner: root
    group: root
    mode: '0644'
  changed_when: false

- name: Check if sysctl file exists
  stat:
    path: /etc/sysctl.d/99-kubernetes-security.conf
  register: sysctl_file_check
  check_mode: false

- name: Create empty sysctl file if in check mode
  copy:
    content: "# Placeholder file for check mode\n"
    dest: /etc/sysctl.d/99-kubernetes-security.conf
    owner: root
    group: root
    mode: '0644'
  when: ansible_check_mode and not sysctl_file_check.stat.exists
  check_mode: false

- name: Set kernel parameters for security
  sysctl:
    name: "{{ item.key }}"
    value: "{{ item.value }}"
    state: present
    reload: yes
    sysctl_file: /etc/sysctl.d/99-kubernetes-security.conf
  with_items: "{{ sysctl_settings }}"
  when: not ansible_check_mode or sysctl_file_check.stat.exists

- name: Ensure the sysctl file has proper permissions
  file:
    path: /etc/sysctl.d/99-kubernetes-security.conf
    owner: root
    group: root
    mode: '0644'
  when: not ansible_check_mode

- name: Apply sysctl settings
  command: sysctl --system
  changed_when: false
  when: not ansible_check_mode
