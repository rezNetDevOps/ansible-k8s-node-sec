---
# Audit logging setup tasks

- name: Install auditd
  package:
    name: auditd
    state: present
  register: audit_install

- name: Create audit log directory
  file:
    path: /var/log/audit
    state: directory
    mode: '0750'
    owner: root
    group: root
  when: not ansible_check_mode or audit_install.changed

- name: Backup existing audit rules
  copy:
    src: /etc/audit/rules.d/audit.rules
    dest: /etc/audit/rules.d/audit.rules.bak
    remote_src: true
  ignore_errors: true
  when: not ansible_check_mode

- name: Create audit rules directory
  file:
    path: /etc/audit/rules.d
    state: directory
    mode: '0750'
    owner: root
    group: root
  when: not ansible_check_mode or audit_install.changed

- name: Configure auditd settings
  template:
    src: auditd.conf.j2
    dest: /etc/audit/auditd.conf
    owner: root
    group: root
    mode: '0640'
  notify: restart auditd
  when: not ansible_check_mode or audit_install.changed

- name: Configure audit rules
  template:
    src: audit.rules.j2
    dest: /etc/audit/rules.d/audit.rules
    owner: root
    group: root
    mode: '0640'
  register: audit_rules_updated
  when: not ansible_check_mode or audit_install.changed

- name: Validate audit rules
  command: auditctl -R /etc/audit/rules.d/audit.rules
  args:
    warn: false
  register: audit_rules_validation
  ignore_errors: true
  when: not ansible_check_mode

- name: Set validation result variables
  set_fact:
    audit_rules_valid: "{{ audit_rules_validation.rc == 0 }}"
  when: not ansible_check_mode

- name: Debug audit rules validation
  debug:
    msg: "Audit rules validation {{ 'succeeded' if audit_rules_valid else 'failed' }}"
  when: not ansible_check_mode

- name: Load audit rules directly (if validation succeeded)
  command: auditctl -R /etc/audit/rules.d/audit.rules
  args:
    warn: false
  when: not ansible_check_mode and audit_rules_valid

- name: Ensure auditd is running and enabled
  service:
    name: auditd
    state: started
    enabled: yes
  register: auditd_service
  ignore_errors: true
  when: not ansible_check_mode

- name: Check auditd service status
  command: systemctl status auditd
  register: auditd_status
  ignore_errors: true
  when: not ansible_check_mode and auditd_service.failed

- name: Display auditd service status
  debug:
    var: auditd_status.stdout_lines
  when: not ansible_check_mode and auditd_service.failed
